Namespaces:
  =: io.murano.conflang.chef
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system


Name: ExampleChef

Extends: std:Application

Properties:

  instance:
    Contract: $.class(res:Instance).notNull()
  att1:
    Contract: $.string()
  att2:
    Contract: $.string()

Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'Creating VM for  Chef example ')
          - $securityGroupIngress:
              - ToPort: 22
                FromPort: 22
                IpProtocol: tcp
                External: true
          - $._environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $.instance.addNid('chefexamplenid')
          - $.instance.deploy()
          - $resources: new(sys:Resources)
          # Deploy Chef example
          - $template: $resources.yaml('DeployExampleChef.template').bind(dict(
                att1  => $.att1,
                att2  => $.att2))
          - $._environment.reporter.report($this, 'Instance is created. Deploying Chef example')
          - $.instance.agent.call($template, $resources)
          - If: $.instance.assignFloatingIp
            Then:
              - $host: $.instance.floatingIpAddress
            Else:
              - $host: $.instance.ipAddresses[0]
          - $._environment.reporter.report($this, format('Chef example is installed at {0}', $host))
          - $.setAttr(deployed, true)

