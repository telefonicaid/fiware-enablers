#  Licensed under the Apache License, Version 2.0 (the "License"); you may
#  not use this file except in compliance with the License. You may obtain
#  a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.

Namespaces:
  =: com.example.apache
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system
  conf: io.murano.configuration


Name: ApacheHttpServer

Extends: std:Application

Properties:

  enablePHP:
    Contract: $.bool()
    Default: false

  instance:
    Contract: $.class(res:Instance).notNull()

Methods:
  .init:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'Creating VM for Apache Server.')
          - $securityGroupIngress:
            - ToPort: 80
              FromPort: 80
              IpProtocol: tcp
              External: true
            - ToPort: 443
              FromPort: 443
              IpProtocol: tcp
              External: true
          - $._environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $.instance.deploy()

          - $._environment.reporter.report($this, 'Instance is created. Deploying Apache.')

          - $file: sys:Resources.string('deployApache.sh')
          - conf:Linux.runCommand($.instance.agent, $file)

          - If: $.enablePHP
            Then:
              - $._environment.reporter.report($this, 'Installing PHP.')
              - conf:Linux.runCommand($.instance.agent, "sudo apt-get -y install php5")

          - $._environment.reporter.report($this, 'Apache is installed.')
          - If: $.instance.assignFloatingIp
            Then:
              - $host: $.instance.floatingIpAddress
            Else:
              - $host: $.instance.ipAddresses.first()

          - $._environment.reporter.report($this, format('Apache is available at http://{0}', $host))
          - $.setAttr(deployed, true)
