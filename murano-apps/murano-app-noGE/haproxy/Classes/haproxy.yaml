Namespaces:
  =: io.murano.conflang.chef
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system


Name: haproxy

Extends: std:Application

Properties:
  instance:
    Contract: $.class(res:Instance).notNull()


Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'Creating VM for deployment')
          - $securityGroupIngress:
            - ToPort: 80
              FromPort: 80
              IpProtocol: tcp
              External: true
            - ToPort: 22
              FromPort: 22
              IpProtocol: tcp
              External: true

          - $._environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $.instance.addNid()
          - $.instance.deploy()
          - $resources: new(sys:Resources)
          # Deploy haproxy
          - $template: $resources.yaml('Deployhaproxy.template')
          - $._environment.reporter.report($this, 'Instance is created. Deploying haproxy')
          - $.instance.agent.call($template, $resources)
          - If: $.instance.assignFloatingIp
            Then:
              - $host: $.instance.floatingIpAddress
            Else:
              - $host: $.instance.ipAddresses[0]
          - $._environment.reporter.report($this, format('haproxy is installed at {0}', $host))
          - $.setAttr(deployed, true)
